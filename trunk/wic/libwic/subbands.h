/*******************************************************************************
* file:         subbands.h                                                     *
* version:      0.1.0                                                          *
* author:       mice (mailto:my_mice@mail.ru, ICQ:332-292-380)                 *
* description:  not available                                                  *
* tests:        none                                                           *
*******************************************************************************/

#pragma once

#ifndef WIC_LIBWIC_SUBBANDS_INCLUDED
#define WIC_LIBWIC_SUBBANDS_INCLUDED

////////////////////////////////////////////////////////////////////////////////
// headers

// standard C++ library headers
#include <new>							// for std::bad_alloc exception class
#include <assert.h>

// libwic headers
#include <wic/libwic/types.h>


////////////////////////////////////////////////////////////////////////////////
// wic namespace
namespace wic {


////////////////////////////////////////////////////////////////////////////////
// subbands class declaration

//! \brief Содержит информацию о расположении саббендов
/*!	Объекты этого класса хранят информацию о расположении саббендов. Для
	каждого саббенда имеется запись, которая включает:
	- граничные координаты саббенда
	- общее количество коэффициентов в саббенде
	- количество коэффициентов, приходящихся на одно дерево в саббенде
	- указатель на родительский саббенд
*/
class subbands {
public:
	// public types ------------------------------------------------------------

	//! \brief Структура описывает отдельно взятый саббенд
	/*!	Координаты указываются включительно со всех сторон.
	*/
	struct subband_t {
		sz_t	x_min;		//!< \brief x координата левого верхнего
							//!< коэффициента
		sz_t	y_min;		//!< \brief y координата левого верхнего
							//!< коэффициента
		sz_t	x_max;		//!< \brief x координата правого нижнего
							//!< коэффициента
		sz_t	y_max;		//!< \brief y координата правого нижнего
							//!< коэффициента
		sz_t	count;		//!< \brief Вершин в саббенде
		sz_t	npt;		//!< \brief Вершин в одной ветке дерева
							//!< (nodes per tree)
		subband_t *prnt;	//!< \brief Указатель на родительский саббенд.
							//!< 0 если это LL саббенд.
		sz_t	lvl;		//!< \brief Номер уровня на котором находится
							//!< саббенд
	};

	// public constants --------------------------------------------------------

	//! \brief Количество саббендов в уровне (кроме нулевого уровня)
	static const sz_t SUBBANDS_PER_LEVEL	= 3;

	//! \brief Количество саббендов в нулевом уровне
	static const sz_t SUBBANDS_ON_0_LEVEL	= 1;

	//! \brief Индекс саббенда LL в уровне разложения
	static const sz_t SUBBAND_LL			= 0;

	//! \brief Индекс саббенда HL в уровне разложения
	static const sz_t SUBBAND_HL			= 0;

	//! \brief Индекс саббенда LH в уровне разложения
	static const sz_t SUBBAND_LH			= 1;

	//! \brief Индекс саббенда HH в уровне разложения
	static const sz_t SUBBAND_HH			= 2;

	//!	\brief Количество саббендов на уровне (кроме нулевого, на котором
	//!	всего один саббенд)
	static const sz_t SUBBANDS_ON_LEVEL		= 3;

	//! \brief Смещение для получения предидущего уровня (ближнего к вершине)
	static const dsz_t LVL_PREV				= -1;

	//! \brief Смещение для получения следуюшего уровня (дальнего от вершины)
	static const dsz_t LVL_NEXT				= 1;

    // public functions --------------------------------------------------------

	//! \brief Конструктор
	subbands(const sz_t width, const sz_t height, const sz_t lvls);

	//! \brief Деструктор
	~subbands();

	//! \brief Ширина изображения
	sz_t width() const { return _width; }

	//! \brief Высота изображения
	sz_t height() const { return _height; }

	//! \brief Количество уровней разложения
	/*!	Стоит заметить, что саббенды располагаются на <i>(%lvls() + 1)</i>
		уровнях. Это происходит из-за того, что на уровене 0 всегда находится
		<i>LL</i> саббенд, и его наличие не зависит от количества уровней
		разложения. Поэтому, если необходимо получить доступ к саббендам с
		последнего уровня (с наибольшей площадью), необходимо указывать в
		функциях get() номер уровня равный <i>%lvls()</i>.
	*/
	sz_t lvls() const { return _lvls; }

	//! \brief Возвращает саббенд по его индексу (номеру)
	subband_t &get(const sz_t i = 0) {
		return *(_get(i));
	}

	//! \brief Возвращает саббенд по его индексу (номеру)
	const subband_t &get(const sz_t i = 0) const {
		return *(_get(i));
	}

	//! \brief Возвращает нужный саббенд с нужного уровня
	subband_t &get(const sz_t lvl, const sz_t i) {
		return *(_get(lvl, i));
	}

	//! \brief Возвращает нужный саббенд с нужного уровня
	const subband_t &get(const sz_t lvl, const sz_t i) const {
		return *(_get(lvl, i));
	}

	//! \brief Возвращает LL саббенд
	subband_t &get_LL() { return get(); }

	//! \brief Количество саббендов без LL саббенда
	sz_t mcount() const { return _mcount; }

	//! \brief Общее количество саббендов
	sz_t count() const { return _count; }

protected:
	// protected functions -----------------------------------------------------

	//! \brief Возвращает указатель на саббенд по его индексу (номеру)
	subband_t *_get(const sz_t i = 0) const;

	//! \brief Возвращает указатель на нужный саббенд с нужного уровня
	subband_t *_get(const sz_t lvl, const sz_t i) const;

	//! \brief Заполняет данные о уровне вейвлет преобразования
	inline void _mk_lvl(const sz_t lvl,
						const sz_t x_min, const sz_t y_min,
						const sz_t x_max, const sz_t y_max);

private:
	// private data ------------------------------------------------------------

	//!	\brief Ширина изображения
	sz_t _width;

	//! \brief Высота изображения
	sz_t _height;

	//! \brief Количество уровней вейвлет преобразования
	sz_t _lvls;

	//! \brief Массив описаний саббендов
	subband_t *_sb;

	//! \brief Количество саббендов без LL саббенда
	sz_t _mcount;

	//! \brief Общее количество саббендов
	sz_t _count;
};



}	// wtc namespace



#endif	// WIC_LIBWIC_SUBBANDS_INCLUDED
